 método use y dentro llamar al método static de la variable express con un string que indique el path donde se encuentran los archivos estáticos.
 La variable global '__dirname' almacena el path donde se encuentra la aplicación Node.js


En este pequeño articulo aprenderás como servir archivos estáticos en Express.
Express es framework de Node Js el cual nos permite crear API's y servicios web 
robustos de una manera más fácil.
Si tenemos nuestra API desarrollada con Express sera muy fácil agregarle la capacidad 
de que pueda manejar los archivos estáticos.
Llámese archivos estáticos a imágenes, videos, archivos de audio,
documentos en distintos formatos, fuentes, archivos de JavaScript, html y css, etc.


from flask import Flask, abort
from flask import jsonify
app = Flask(__name__)

@app.errorhandler(404) 
def invalid_route(e): 
    return jsonify({'errorCode' : 404, 'message' : 'Route not found'})



Archivos estáticos

Cuando se desarrolla una aplicación web se manejan recursos
 estáticos como logos, videos, archivos javascript y css los cuales
  se agregan directamente a las plantillas html generadas, estos, 
  normalmente son almacenados en un directorio llamado “public”.


sintaxis
express.static(root, [options]) // express.static(__dirname + '/public')
A esta función se le pasa la ruta del directorio en el cual
express buscará los archivos estáticos.



 #
Expressjs
Nodejs
Programacion
Development
Learning
Servicio de archivos estáticos en Express
Configuración de Express 

Carpeta de archivos estáticos
"start": "node index.js"
package.json

- Sirve aplicaciones web y archivos estáticos con Express
Sirviendo Archivos Estáticos
 Archivos estáticos
 Mostrar archivos estáticos y recibir parámetros en express js
 Servir Archivos Estáticos con Express.js
 ¿Cómo servir archivos estáticos en Express?
 Cómo servir un index.html y estáticos Javascript y CSS con Node.js
 Framework Express - servir archivos estáticos html, css, jpg, mp3, mp4, ico, js etc